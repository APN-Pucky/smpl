[build-system]
requires = [
  "hatchling",
  "hatch-vcs",
]
build-backend = "hatchling.build"



[project]
name = "smpl"
dynamic = ["version"]
description = "SiMPLe plotting and fitting"
readme = "README.md"
requires-python = ">=3.9"
keywords = []
authors = [
  { name = "Alexander Puck Neuwirth", email = "alexander@neuwirth-informatik.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "smpl_debug >=1.0.5",
  "smpl_io >=1.0.5",
  "smpl_doc >=1.0.5",
  "smpl_util >=1.0.5",
  "smpl_parallel >=1.0.5",
  "iminuit",
  "smpl_animation",
  "uncertainties",
  "numpy",
  "matplotlib",
  "scipy >=1.7.0",
  "sympy",
  "tqdm",
  "pandas >=1.0.0",
]

[project.urls]
Documentation = "https://smpl.readthedocs.io/"
Issues = "https://github.com/APN-Pucky/smpl/issues"
Source = "https://github.com/APN-Pucky/smpl"

[project.optional-dependencies]
doc = [
  "sphinx < 8.0.0",
  "sphinx-rtd-theme",
  "sphinxcontrib-napoleon",
  "nbsphinx",
  "jupyter-sphinx",
  "sphinx-autoapi",
  "sphinx-autobuild",
  "sphinx-math-dollar",
  "pandoc",
  "numpydoc",
  "myst-parser",
  "toml",
]

dev = [
  "pre-commit >=2.20,<4.0",
  "pytest",
  "pytest-cov",
  "nbval",
  "pytest-profiling",
  "pytest-line-profiler-apn >=0.1.5",
  # pytest-line-profiler-apn = {path="/home/apn/git/pytest-line-profiler", develop = true}
  "ipython",
  "jupyterlab",
  "jupyter",
]

[tool.hatch.envs.doc]
features = ["doc"]

[tool.hatch.envs.dev]
features = ["dev"]


[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "smpl/_version.py"


[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "RUF012",   # TODO: mutable class attributes
  "SIM115",   # TODO: use context manager for opening files
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = [ "-v" ,"--cov=smpl" ,"--cov-append","--cov-report=term" ,"--cov-report=xml" ,"--doctest-modules" ,"--nbval-lax", "--ignore=./docs/source/conf.py", "--ignore=./debug/"]
filterwarnings = [
    'ignore: pkg_resources is deprecated as an API:DeprecationWarning',
    'ignore:RuntimeWarning',
]

[tool.coverage.run]
relative_files = true
omit = [
  "./docs/",
  "./docs/source/conf.py",
]
