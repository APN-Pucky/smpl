{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from smpl import plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gompertz(n,a,b):\n",
    "    return -a * n * np.log(b*n)\n",
    "\n",
    "def solution_gompertz(t,a,b,c):\n",
    "    return 1/b*np.exp(np.exp(-t*a)*c)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Multi Plot\n",
    "\n",
    "Separation of Variables:\n",
    "\n",
    "$$\\int \\frac{1}{N \\ln (bN)} dN = \\ln(\\ln(bN)) +c= -adt =-at$$\n",
    "\n",
    "$$\\implies N(t) =  \\frac{1}{b} \\exp (c \\exp (-t a))$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for a in [1,2]:\n",
    "    for b in [1,0.5]:\n",
    "        plot.function( gompertz, a,b, xaxis=\"$N$\", yaxis=\"$\\\\dot N$\",xmin=0.1, xmax=3 ,init=False )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "for a in [1,2]:\n",
    "    for b in [1,1/8]:\n",
    "        for c in [1,2]:\n",
    "            plot.function( solution_gompertz, a,b,c, xaxis=\"$t$\", yaxis=\"$N$\",xmin=0.1, xmax=3,init=False,label=\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
