name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system '.[dev]'
        uv pip list

#    - name: Install external packages
#      run: >-
#        sudo apt-get update -y &&
#        sudo apt-get install -y
#        graphviz
#        texlive-latex-base
#        texlive-fonts-extra
#        texlive-extra-utils

    - name: Test with pytest
      run: |
        pytest -r sx

    - name: Report Coveralls
      uses: AndreMiras/coveralls-python-action@develop

    - name: Report Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.CODACY_API_TOKEN }}
        # or
        #api-token: ${{ secrets.CODACY_API_TOKEN }}
        coverage-reports: coverage.xml

#    - name: Report core project coverage with Codecov
#      if: >-
#        github.event_name != 'schedule'
#      uses: codecov/codecov-action@v5
#      with:
#        fail_ci_if_error: true
#        files: ./coverage.xml
#        flags: unittests-python-${{ matrix.python-version }}
#        name: babyyoda
#        token: ${{ secrets.CODECOV_TOKEN }}
